--- C:\Users\davek\AppData\Local\Temp\meld-tmpe12diy39.cs
+++ E:\Emerald1.3\patched\EmeraldDebugger.cs
@@ -1,4 +1,8 @@
 using UnityEngine;
+#if ASTAR
+using Pathfinding;                  // DKE: Referencing the AStarPathfinding code. If necessary also update your code assemblies.
+using System.Collections.Generic;   // DKE: Needed for the List<> class in method DrawNavMeshPathInternal()
+#endif
 
 namespace EmeraldAI
 {
@@ -173,12 +177,25 @@
         void DrawNavMeshPathInternal ()
         {
             if (EnableDebuggingTools == YesOrNo.No || DrawNavMeshPath == YesOrNo.No) return;
+            
+#if ASTAR
+            // DKE: rewritten for AStarPathfinding, see: https://www.arongranberg.com/astar/documentation/5_2_4_67ce3f038/aipath/getremainingpath.html#GetRemainingPath    
+
+            List<Vector3> buffer = new List<Vector3>();
+
+            EmeraldComponent.m_NavMeshAgent.GetRemainingPath(buffer, out bool stale);
+            for (int i = 0; i < buffer.Count - 1; i++) 
+            {
+                Debug.DrawLine(buffer[i], buffer[i+1], NavMeshPathColor);
+            }
+#else            
 
             for (int i = 0; i < EmeraldComponent.m_NavMeshAgent.path.corners.Length; i++)
             {
                 if (i > 0) Debug.DrawLine(EmeraldComponent.m_NavMeshAgent.path.corners[i - 1] + Vector3.up * 0.5f, EmeraldComponent.m_NavMeshAgent.path.corners[i] + Vector3.up * 0.5f, NavMeshPathColor);
                 else Debug.DrawLine(EmeraldComponent.m_NavMeshAgent.path.corners[0] + Vector3.up * 0.5f, EmeraldComponent.m_NavMeshAgent.path.corners[i] + Vector3.up * 0.5f, NavMeshPathColor);
             }
+#endif            
         }
 
         /// <summary>

